{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\jespe\\\\Documents\\\\Android-Chat\\\\components\\\\Chat.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { PickerIOSItem } from \"react-native-web/dist/index\";\nimport { GiftedChat, Bubble } from 'react-native-gifted-chat';\nimport firebase from 'firebase';\nimport firestore from 'firebase';\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this);\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var messages = [];\n      querySnapshot.forEach(function (doc) {\n        var data = doc.data();\n        messages.push({\n          name: data.name,\n          Answer: data.Answer.toString()\n        });\n      });\n\n      _this.setState({\n        messages: messages\n      });\n    };\n\n    _this.state = {\n      messages: [],\n      uid: 0,\n      loggenInText: 'Please wait, Logging in..'\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp({\n        apiKey: \"AIzaSyDBiw9HcxkieYg04FpvoQryDAj7U2Ht5-E\",\n        authDomain: \"jw-chat-f1039.firebaseapp.com\",\n        projectId: \"jw-chat-f1039\",\n        storageBucket: \"jw-chat-f1039.appspot.com\",\n        messagingSenderId: \"1089230184479\",\n        appId: \"1:1089230184479:web:581fa3509e59c7cd0b752a\",\n        measurementId: \"G-TE01CF40LR\"\n      });\n      _this.referenceChatMessagelistUser = null;\n    }\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.referenceChatMessages = firebase.firestore().collection('Answering');\n      this.referenceChatMessages = firebase.firestore().collection('Answering');\n      this.authUnsubscribe = firebase.auth().onAuthStateChanged(function _callee(user) {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (user) {\n                  _context.next = 3;\n                  break;\n                }\n\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(firebase.auth().signInAnonymously());\n\n              case 3:\n                _this2.setState({\n                  uid: user.uid,\n                  loggedInText: 'Currently logged in'\n                });\n\n                _this2.referenceChatMessages = firebase.firestore().collection('Answering').where(\"uid\", \"==\", _this2.state.uid);\n                _this2.unsubscribeListUser = _this2.referenceChatMessages.onSnapshot(_this2.onCollectionUpdate);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.authUnsubscribe();\n      this.unsubscribeListUser();\n    }\n  }, {\n    key: \"addMessage\",\n    value: function addMessage() {\n      this.referenceChatMessages.add({\n        name: 'TestList',\n        Answer: ['eggs', 'pasta', 'veggies'],\n        uid: this.state.uid\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      });\n    }\n  }, {\n    key: \"renderBubble\",\n    value: function renderBubble(props) {\n      return React.createElement(Bubble, _extends({}, props, {\n        wrapperStyle: {\n          right: {\n            backgroundColor: 'blue'\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 5\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var name = this.props.route.params.name;\n      this.props.navigation.setOptions({\n        title: name\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 5\n        }\n      }, this.state.loggedInText), React.createElement(GiftedChat, {\n        renderBubble: this.renderBubble.bind(this),\n        messages: this.state.messages,\n        onSend: function onSend(messages) {\n          return _this3.onSend(messages);\n        },\n        onCollectionUpdate: function onCollectionUpdate(messages) {\n          return _this3.onCollectionUpdate(messages);\n        },\n        user: {\n          uid: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }), Platform.OS === 'android' ? React.createElement(KeyboardAvoidingView, {\n        behavior: \"height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }) : null);\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport { Chat as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  item: {\n    fontSize: 20,\n    color: 'blue'\n  },\n  text: {\n    fontSize: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/jespe/Documents/Android-Chat/components/Chat.js"],"names":["React","PickerIOSItem","GiftedChat","Bubble","firebase","firestore","Chat","onCollectionUpdate","querySnapshot","messages","forEach","doc","data","push","name","Answer","toString","setState","state","uid","loggenInText","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","referenceChatMessagelistUser","referenceChatMessages","collection","authUnsubscribe","auth","onAuthStateChanged","user","signInAnonymously","loggedInText","where","unsubscribeListUser","onSnapshot","add","previousState","append","props","right","backgroundColor","route","params","navigation","setOptions","title","styles","container","justifyContent","renderBubble","bind","onSend","Platform","OS","Component","StyleSheet","create","flex","item","fontSize","color","text"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, KeyboardAvoidingView, Platform, FlatList, PickerIOSItem } from 'react-native';\r\nimport { GiftedChat, Bubble } from 'react-native-gifted-chat';\r\nimport firebase from 'firebase';\r\nimport firestore from 'firebase';\r\n\r\n// const firebase = require('firebase');\r\n// require('firebase/firestore');\r\n\r\nexport default class Chat extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        messages: [],\r\n        uid: 0,\r\n        loggenInText: 'Please wait, Logging in..'\r\n      }\r\n\r\nif (!firebase.apps.length){\r\n  firebase.initializeApp({\r\n  apiKey: \"AIzaSyDBiw9HcxkieYg04FpvoQryDAj7U2Ht5-E\",\r\n  authDomain: \"jw-chat-f1039.firebaseapp.com\",\r\n  projectId: \"jw-chat-f1039\",\r\n  storageBucket: \"jw-chat-f1039.appspot.com\",\r\n  messagingSenderId: \"1089230184479\",\r\n  appId: \"1:1089230184479:web:581fa3509e59c7cd0b752a\",\r\n  measurementId: \"G-TE01CF40LR\"\r\n  });\r\n  this.referenceChatMessagelistUser = null ;\r\n  }\r\n}\r\n\r\n\r\ncomponentDidMount() {\r\n  // creating a references to shoppinglists collection\r\n  this.referenceChatMessages = \r\n  firebase.firestore()\r\n  .collection('Answering');\r\n\r\n  this.referenceChatMessages = firebase.firestore().collection('Answering');\r\n  \r\n  // listen to authentication events\r\n  this.authUnsubscribe = firebase.auth().onAuthStateChanged(async (user) => {\r\n    if (!user) {\r\n      await firebase.auth().signInAnonymously();\r\n    }\r\n    //update user state with currently active user data\r\n    this.setState({\r\n      uid: user.uid,\r\n      loggedInText: 'Currently logged in',\r\n    });\r\n\r\n    // create a reference to the active user's documents (shopping lists)\r\n    this.referenceChatMessages = firebase.firestore()\r\n    .collection('Answering').where(\"uid\", \"==\", this.state.uid);\r\n    // listen for collection changes for current user \r\n    this.unsubscribeListUser = this.referenceChatMessages.onSnapshot(this.onCollectionUpdate);\r\n\r\n    \r\n\r\n  });\r\n}\r\n\r\ncomponentWillUnmount() {\r\n  this.authUnsubscribe();\r\n  this.unsubscribeListUser();\r\n}\r\n\r\n\r\n      \r\n// adding a users with ID name and avatar\r\n// componentDidMount() {\r\n//   this.setState({\r\n//     messages: [\r\n//       {\r\n//         _id: 1,\r\n//           text: 'Hello developer',\r\n//           createdAt: new Date(),\r\n//         user: {\r\n//           _id: 2,\r\n//           name: 'React Native',dfcsd\r\n//           avatar: 'https://placeimg.com/140/140/any',\r\n//         },\r\n//     },\r\n//       {_id: 2,\r\n//         text: 'This is a system message',\r\n//         createdAt: new Date(),\r\n//         system: true,\r\n//       },\r\n//     ]\r\n//   })\r\n// }\r\n\r\n\r\n\r\n\r\nonCollectionUpdate = (querySnapshot) => {\r\n  const messages = [];\r\n  // go through each document\r\n  querySnapshot.forEach((doc) => {\r\n    // get the QueryDocumentSnapshot's data\r\n    var data = doc.data();\r\n    messages.push({\r\n      name: data.name,\r\n      Answer: data.Answer.toString(),\r\n    });\r\n  });\r\n  this.setState({\r\n    messages,\r\n  });\r\n};\r\n\r\naddMessage() { \r\n  // add a new list to the collection\r\n  this.referenceChatMessages.add({\r\n    name: 'TestList',\r\n    Answer: ['eggs', 'pasta', 'veggies'],\r\n    uid: this.state.uid,\r\n  });\r\n}\r\n\r\n\r\nonSend(messages = []) {\r\n  this.setState(previousState => ({\r\n    messages: GiftedChat.append(previousState.messages, messages),\r\n  }))\r\n}\r\n\r\nrenderBubble(props) {\r\n  return ( \r\n    <Bubble \r\n    {...props}\r\n    wrapperStyle={{\r\n      right: {\r\n        backgroundColor: 'blue'\r\n      }\r\n    }}\r\n    />\r\n  )\r\n}\r\n\r\n  render() {\r\n    let name = this.props.route.params.name;\r\n    this.props.navigation.setOptions({ title: name });\r\n\r\n     return (\r\n      <View style={styles.container}>\r\n    <Text style={{ justifyContent: 'center'}}>{this.state.loggedInText}</Text>\r\n        <GiftedChat \r\n          renderBubble={this.renderBubble.bind(this)}\r\n          messages={this.state.messages}\r\n          onSend={messages => this.onSend(messages)}\r\n          onCollectionUpdate={messages => this.onCollectionUpdate(messages)}\r\n          \r\n          user={{\r\n            uid: 0,\r\n          }} />\r\n            { Platform.OS === 'android' ? \r\n            <KeyboardAvoidingView behavior=\"height\" /> : null\r\n            }\r\n    </View>\r\n    );\r\n  };\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',      \r\n  },\r\n  item: {\r\n    fontSize: 20,\r\n    color: 'blue',\r\n  },\r\n  text: {\r\n    fontSize: 30,\r\n  }\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}