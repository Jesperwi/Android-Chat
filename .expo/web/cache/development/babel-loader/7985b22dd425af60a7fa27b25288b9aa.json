{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\jespe\\\\Documents\\\\hello-world\\\\components\\\\Chat.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      backgroundColor: 'powderblue',\n      backgroundColor2: 'skyblue',\n      pressed: false\n    };\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"changeColor\",\n    value: function changeColor() {\n      if (!this.state.pressed) {\n        this.setState({\n          pressed: true,\n          backgroundColor: 'red',\n          backgroundColor2: 'black'\n        });\n      } else {\n        this.setState({\n          pressed: false,\n          backgroundColor: 'black',\n          backgroundColor2: 'red'\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var name = this.props.route.params.name;\n      this.props.navigation.setOptions({\n        title: name\n      });\n      return React.createElement(View, {\n        className: \"backgroundStyle\",\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 3\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 3,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }\n      }, React.createElement(Button, {\n        title: \"Go to Start\",\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Start');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 0.1,\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        onPress: this.props.navigation.navigate('backgroundStyle', styles.redBack),\n        style: {\n          width: 30,\n          height: 30,\n          backgroundColor: 'powderblue',\n          borderRadius: '50%',\n          outlineColor: 'white, 1px, solid'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          width: 30,\n          height: 30,\n          backgroundColor: 'skyblue',\n          borderRadius: '50%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: {\n          width: 30,\n          height: 30,\n          backgroundColor: 'steelblue',\n          borderRadius: '50%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }))));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport { Chat as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  redBack: {\n    flex: 1,\n    backgroundColor: 'powderblue',\n    display: 'cover'\n  }\n});","map":{"version":3,"sources":["C:/Users/jespe/Documents/hello-world/components/Chat.js"],"names":["React","Chat","state","backgroundColor","backgroundColor2","pressed","setState","name","props","route","params","navigation","setOptions","title","styles","container","flex","justifyContent","alignItems","navigate","flexDirection","redBack","width","height","borderRadius","outlineColor","Component","StyleSheet","create","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text, Button, StyleSheet } from 'react-native';\r\n\r\nexport default class Chat extends React.Component {\r\n  state={\r\n    backgroundColor: 'powderblue',\r\n    backgroundColor2: 'skyblue',\r\n    pressed: false,\r\n  };\r\n\r\n  changeColor(){\r\n    if(!this.state.pressed){\r\n       this.setState({ pressed: true,backgroundColor: 'red', backgroundColor2: 'black'});\r\n    } else {\r\n      this.setState({ pressed: false, backgroundColor: 'black' ,backgroundColor2: 'red'});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let name = this.props.route.params.name; // OR ...\r\n    // let { name } = this.props.route.params;\r\n    this.props.navigation.setOptions({ title: name });\r\n\r\n     return (\r\n  <View className=\"backgroundStyle\" style={styles.container}>   \r\n\r\n    <View style={{flex:3, justifyContent: 'center', alignItems: 'center'}}>\r\n        <Button\r\n          title=\"Go to Start\"\r\n          onPress={() => this.props.navigation.navigate('Start')} />\r\n            <View style={{flex: 0.1, flexDirection: 'row'}}>\r\n          <View onPress={this.props.navigation.navigate('backgroundStyle', styles.redBack)} style={{ width: 30, height: 30, backgroundColor: 'powderblue', borderRadius: '50%', outlineColor: 'white, 1px, solid'  }} />\r\n          <View style={{width: 30, height: 30, backgroundColor: 'skyblue', borderRadius: '50%'}} />\r\n          <View style={{width: 30, height: 30, backgroundColor: 'steelblue', borderRadius: '50%'}} />\r\n    </View>\r\n    </View>\r\n  </View>\r\n    );\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white'\r\n   },\r\n   redBack: {\r\n    flex: 1,\r\n    backgroundColor: 'powderblue',\r\n    display: 'cover'\r\n   }\r\n});"]},"metadata":{},"sourceType":"module"}