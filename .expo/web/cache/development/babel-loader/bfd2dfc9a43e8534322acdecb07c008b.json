{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\jespe\\\\Documents\\\\Android-Chat\\\\components\\\\Chat.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport NetInfo from '@react-native-community/netinfo';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { GiftedChat, Bubble } from 'react-native-gifted-chat';\nimport CustomActions from \"./CustomActions\";\n\nvar firebase = require('firebase');\n\nrequire('firebase/firestore');\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this);\n\n    _this.handleConnectivityChange = function (state) {\n      var isConnected = state.isConnected;\n\n      if (isConnected == true) {\n        _this.setState({\n          isConnected: true\n        });\n\n        _this.unsubscribe = _this.referenceChatMessages.orderBy(\"createdAt\", \"desc\").onSnapshot(_this.onCollectionUpdate);\n      } else {\n        _this.setState({\n          isConnected: false\n        });\n      }\n    };\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var messages = [];\n      querySnapshot.forEach(function (doc) {\n        var data = doc.data();\n        messages.push({\n          _id: data._id,\n          text: data.text.toString(),\n          createdAt: data.createdAt.toDate(),\n          user: data.user,\n          image: data.image || null,\n          location: data.location || null\n        });\n      });\n\n      _this.setState({\n        messages: messages\n      });\n    };\n\n    _this.renderBubble = function (props) {\n      return React.createElement(Bubble, _extends({}, props, {\n        wrapperStyle: {\n          right: {\n            backgroundColor: '#FF364E'\n          }\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 5\n        }\n      }));\n    };\n\n    _this.renderCustomActions = function (props) {\n      return React.createElement(CustomActions, _extends({}, props, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 10\n        }\n      }));\n    };\n\n    _this.state = {\n      messages: [],\n      uid: 0,\n      isConnected: false\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp({\n        apiKey: \"AIzaSyDBiw9HcxkieYg04FpvoQryDAj7U2Ht5-E\",\n        authDomain: \"jw-chat-f1039.firebaseapp.com\",\n        projectId: \"jw-chat-f1039\",\n        storageBucket: \"jw-chat-f1039.appspot.com\",\n        messagingSenderId: \"1089230184479\",\n        appId: \"1:1089230184479:web:581fa3509e59c7cd0b752a\",\n        measurementId: \"G-TE01CF40LR\"\n      });\n      _this.referenceChatMessages = firebase.firestore().collection(\"messages\");\n    }\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.getMessages();\n      NetInfo.fetch().then(function (connection) {\n        if (connection.isConnected) {\n          console.log('online');\n        } else {\n          console.log('offline');\n        }\n      });\n      this.authUnsubscribe = firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          firebase.auth().signInAnonymously();\n        }\n\n        _this2.setState({\n          uid: user.uid,\n          messages: []\n        });\n\n        _this2.unsubscribe = _this2.referenceChatMessages.orderBy('createdAt', 'desc').onSnapshot(_this2.onCollectionUpdate);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.authUnsubscribe();\n      this.unsubscribe();\n    }\n  }, {\n    key: \"getMessages\",\n    value: function getMessages() {\n      var messages;\n      return _regeneratorRuntime.async(function getMessages$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              messages = '';\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('messages'));\n\n            case 4:\n              _context.t0 = _context.sent;\n\n              if (_context.t0) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.t0 = [];\n\n            case 7:\n              messages = _context.t0;\n              this.setState({\n                messages: JSON.parse(messages)\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t1 = _context[\"catch\"](1);\n              console.log(_context.t1.message);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[1, 11]], Promise);\n    }\n  }, {\n    key: \"saveMessages\",\n    value: function saveMessages() {\n      return _regeneratorRuntime.async(function saveMessages$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('messages', JSON.stringify(this.state.messages)));\n\n            case 3:\n              _context2.next = 8;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0.message);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[0, 5]], Promise);\n    }\n  }, {\n    key: \"deleteMessages\",\n    value: function deleteMessages() {\n      return _regeneratorRuntime.async(function deleteMessages$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('messages'));\n\n            case 3:\n              this.setState({\n                messages: []\n              });\n              _context3.next = 9;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0.message);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[0, 6]], Promise);\n    }\n  }, {\n    key: \"addMessage\",\n    value: function addMessage() {\n      var message = this.state.messages[0];\n      this.referenceChatMessages.add({\n        _id: message._id,\n        text: message.text.toString(),\n        createdAt: message.createdAt,\n        user: message.user,\n        image: message.image || null,\n        location: message.location || null\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var _this3 = this;\n\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      }, function () {\n        _this3.saveMessages();\n\n        _this3.addMessage();\n      });\n    }\n  }, {\n    key: \"renderCustomView\",\n    value: function renderCustomView(props) {\n      var currentMessage = props.currentMessage;\n\n      if (currentMessage.location) {\n        return React.createElement(MapView, {\n          style: {\n            width: 150,\n            height: 100,\n            borderRadius: 13,\n            margin: 3\n          },\n          region: {\n            latitude: currentMessage.location.latitude,\n            longitude: currentMessage.location.longitude,\n            latitudeDelta: 0.0922,\n            longitudeDelta: 0.0421\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 7\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var name = this.props.route.params.name;\n      this.props.navigation.setOptions({\n        title: name\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }, this.state.loggedInText), React.createElement(GiftedChat, {\n        messages: this.state.messages,\n        renderBubble: this.renderBubble,\n        isConnected: this.state.isConnected,\n        renderCustomView: this.renderCustomView,\n        renderActions: this.renderCustomActions,\n        onSend: function onSend(messages) {\n          return _this4.onSend(messages);\n        },\n        user: {\n          _id: this.state.uid\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }), Platform.OS === 'android' ? React.createElement(KeyboardAvoidingView, {\n        behavior: \"height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }\n      }) : null);\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport { Chat as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  text: {\n    fontSize: 30\n  }\n});\nCustomActions.contextTypes = {\n  actionSheet: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/jespe/Documents/Android-Chat/components/Chat.js"],"names":["React","PropTypes","AsyncStorage","NetInfo","GiftedChat","Bubble","CustomActions","firebase","require","Chat","handleConnectivityChange","state","isConnected","setState","unsubscribe","referenceChatMessages","orderBy","onSnapshot","onCollectionUpdate","querySnapshot","messages","forEach","doc","data","push","_id","text","toString","createdAt","toDate","user","image","location","renderBubble","props","right","backgroundColor","renderCustomActions","uid","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","collection","getMessages","fetch","then","connection","console","log","authUnsubscribe","auth","onAuthStateChanged","signInAnonymously","getItem","JSON","parse","message","setItem","stringify","removeItem","add","previousState","append","saveMessages","addMessage","currentMessage","width","height","borderRadius","margin","latitude","longitude","latitudeDelta","longitudeDelta","name","route","params","navigation","setOptions","title","styles","container","textAlign","color","loggedInText","renderCustomView","onSend","Platform","OS","Component","StyleSheet","create","flex","justifyContent","fontSize","contextTypes","actionSheet","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport NetInfo from '@react-native-community/netinfo';\r\nimport { View, Text, StyleSheet, KeyboardAvoidingView, Platform, Image } from 'react-native';\r\nimport { GiftedChat, Bubble } from 'react-native-gifted-chat';\r\nimport CustomActions from './CustomActions';\r\n\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore');\r\n\r\nexport default class Chat extends React.Component {\r\n    constructor() {\r\n      super();\r\n      \r\n      this.state = {\r\n        messages: [],\r\n        uid: 0,\r\n        isConnected: false,\r\n}\r\n\r\nif (!firebase.apps.length){\r\n  firebase.initializeApp({\r\n  apiKey: \"AIzaSyDBiw9HcxkieYg04FpvoQryDAj7U2Ht5-E\",\r\n  authDomain: \"jw-chat-f1039.firebaseapp.com\",\r\n  projectId: \"jw-chat-f1039\",\r\n  storageBucket: \"jw-chat-f1039.appspot.com\",\r\n  messagingSenderId: \"1089230184479\",\r\n  appId: \"1:1089230184479:web:581fa3509e59c7cd0b752a\",\r\n  measurementId: \"G-TE01CF40LR\"\r\n  });\r\n  this.referenceChatMessages = firebase.firestore().collection(\"messages\");\r\n  }\r\n}\r\n// fetching the netinfo and makes a user\r\ncomponentDidMount() {\r\n  this.getMessages();\r\n    NetInfo.fetch().then(connection => {\r\n      if (connection.isConnected) {\r\n        console.log('online');\r\n      } else {\r\n        console.log('offline');\r\n      }\r\n    });\r\n  this.authUnsubscribe = firebase.auth()\r\n    .onAuthStateChanged((user) => {\r\n      if (!user) {\r\n        firebase.auth().signInAnonymously();\r\n      }\r\n        this.setState({\r\n          uid: user.uid,\r\n          messages: [],\r\n      });\r\n        this.unsubscribe = this.referenceChatMessages.orderBy('createdAt', 'desc').onSnapshot(this.onCollectionUpdate);\r\n    });\r\n}\r\n\r\ncomponentWillUnmount() {\r\n  this.authUnsubscribe();\r\n  this.unsubscribe();\r\n}\r\n// localstoreage\r\nasync getMessages() {\r\n  let messages = '';\r\n  try {\r\n    messages = await AsyncStorage.getItem('messages') ||  [];\r\n    this.setState({\r\n      messages: JSON.parse(messages)\r\n    });\r\n  } catch (error) {\r\n    console.log(error.message)\r\n  }\r\n};\r\n// save the messages on firebase\r\nasync saveMessages() {\r\n  try{\r\n    await AsyncStorage.setItem('messages', JSON.stringify(this.state.messages));\r\n  } catch (error) {\r\n    console.log(error.message)\r\n  }\r\n}\r\n// deletemessages on firebase\r\nasync deleteMessages() {\r\n  try {\r\n    await AsyncStorage.removeItem('messages');\r\n    this.setState({\r\n      messages: []\r\n    })\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\n\r\nhandleConnectivityChange = (state) => {\r\n  const isConnected = state.isConnected;\r\n  if (isConnected == true) {\r\n    this.setState({\r\n      isConnected: true,\r\n    });\r\n    this.unsubscribe = this.referenceChatMessages.orderBy(\"createdAt\", \"desc\").onSnapshot(this.onCollectionUpdate);\r\n  } else {\r\n    this.setState({\r\n      isConnected: false,\r\n    });\r\n  }\r\n};\r\n\r\n// creating the collection on firebase\r\nonCollectionUpdate = (querySnapshot) => {\r\n  const messages = [];\r\n  // go through each document\r\n  querySnapshot.forEach((doc) => {\r\n    // get the QueryDocumentSnapshot's data\r\n    var data = doc.data();\r\n    messages.push({\r\n      _id: data._id,\r\n      text: data.text.toString(),\r\n      createdAt: data.createdAt.toDate(),\r\n      user: data.user,\r\n      image: data.image || null,\r\n      location: data.location || null,\r\n    });\r\n  });\r\n  this.setState({\r\n    messages,\r\n  });\r\n};\r\n\r\naddMessage() { \r\n  // add a new list to the collection\r\n  const message = this.state.messages[0];\r\n  this.referenceChatMessages.add({\r\n      _id: message._id,\r\n      text: message.text.toString(),\r\n      createdAt: message.createdAt,\r\n      user: message.user,\r\n      image: message.image || null,\r\n      location: message.location || null,\r\n  });\r\n}\r\n// when we send we trigger the onSend to the gifted chat in return\r\nonSend(messages = []) {\r\n  this.setState(previousState => ({\r\n    messages: GiftedChat.append(previousState.messages, messages),\r\n  }),\r\n  () => {\r\n    this.saveMessages();\r\n    this.addMessage();\r\n    }\r\n  )\r\n}\r\n// this code changes the color for the chatbubbles\r\nrenderBubble = (props) => {\r\n  return (\r\n    <Bubble\r\n      {...props}\r\n      wrapperStyle={{ right: { backgroundColor: '#FF364E' } }}\r\n    />\r\n  );\r\n};\r\n\r\n// here we render the customAction component inside the chat component\r\nrenderCustomActions = (props) => {\r\n  return <CustomActions {...props} />;\r\n};\r\n\r\nrenderCustomView(props) {\r\n  const { currentMessage } = props;\r\n  if (currentMessage.location) {\r\n    return (\r\n      <MapView\r\n        style={{ width: 150, height: 100, borderRadius: 13, margin: 3 }}\r\n        region={{\r\n          latitude: currentMessage.location.latitude,\r\n          longitude: currentMessage.location.longitude,\r\n          latitudeDelta: 0.0922,\r\n          longitudeDelta: 0.0421,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return null;\r\n}\r\n\r\nrender() {\r\n  let name = this.props.route.params.name;\r\n  this.props.navigation.setOptions({ title: name });\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={{ textAlign: 'center', color: 'grey' }}>{this.state.loggedInText}</Text>\r\n          <GiftedChat \r\n            messages={this.state.messages}\r\n            renderBubble={this.renderBubble}\r\n            isConnected={this.state.isConnected}\r\n            renderCustomView={this.renderCustomView}  \r\n            renderActions={this.renderCustomActions}  \r\n            onSend={messages => this.onSend(messages)}\r\n            user={{\r\n              _id: this.state.uid,\r\n            }} />\r\n              { Platform.OS === 'android' ? \r\n              <KeyboardAvoidingView behavior=\"height\" /> : null\r\n              }\r\n      </View>\r\n    );\r\n  };\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white'      \r\n  },\r\n  text: {\r\n    fontSize: 30,\r\n  }\r\n});\r\n\r\nCustomActions.contextTypes = {\r\n  actionSheet: PropTypes.func,\r\n };"]},"metadata":{},"sourceType":"module"}