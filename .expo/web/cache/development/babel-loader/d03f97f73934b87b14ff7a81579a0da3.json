{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\jespe\\\\Documents\\\\Android-Chat\\\\components\\\\Chat.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport NetInfo from '@react-native-community/netinfo';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { PickerIOSItem } from \"react-native-web/dist/index\";\nimport { GiftedChat, Bubble, InputToolbar } from 'react-native-gifted-chat';\n\nvar firebase = require('firebase');\n\nrequire('firebase/firestore');\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat() {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this);\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var messages = [];\n      querySnapshot.forEach(function (doc) {\n        var data = doc.data();\n        messages.push({\n          _id: data._id,\n          text: data.text.toString(),\n          createdAt: data.createdAt.toDate(),\n          user: data.name()\n        });\n      });\n\n      _this.setState({\n        messages: messages\n      });\n    };\n\n    _this.state = {\n      messages: [],\n      uid: 0\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp({\n        apiKey: \"AIzaSyDBiw9HcxkieYg04FpvoQryDAj7U2Ht5-E\",\n        authDomain: \"jw-chat-f1039.firebaseapp.com\",\n        projectId: \"jw-chat-f1039\",\n        storageBucket: \"jw-chat-f1039.appspot.com\",\n        messagingSenderId: \"1089230184479\",\n        appId: \"1:1089230184479:web:581fa3509e59c7cd0b752a\",\n        measurementId: \"G-TE01CF40LR\"\n      });\n      _this.referenceChatMessages = firebase.firestore().collection(\"messages\");\n    }\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      NetInfo.fetch().then(function (connection) {\n        if (connection.isConnected) {\n          console.log('online');\n        } else {\n          console.log('offline');\n        }\n      });\n      this.authUnsubscribe = firebase.auth().onAuthStateChanged(function (user) {\n        if (!user) {\n          firebase.auth().signInAnonymously();\n        }\n\n        _this2.setState({\n          uid: user.uid,\n          messages: [],\n          name: ''\n        });\n\n        _this2.unsubscribe = _this2.referenceChatMessages.orderBy('createdAt', 'desc').onSnapshot(_this2.onCollectionUpdate);\n      });\n      this.getMessages();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n      this.authUnsubscribe();\n    }\n  }, {\n    key: \"getMessages\",\n    value: function getMessages() {\n      var messages;\n      return _regeneratorRuntime.async(function getMessages$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              messages = '';\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('messages'));\n\n            case 4:\n              _context.t0 = _context.sent;\n\n              if (_context.t0) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.t0 = [];\n\n            case 7:\n              messages = _context.t0;\n              this.setState({\n                messages: JSON.parse(messages)\n              });\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t1 = _context[\"catch\"](1);\n              console.log(_context.t1.message);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[1, 11]], Promise);\n    }\n  }, {\n    key: \"saveMessages\",\n    value: function saveMessages() {\n      return _regeneratorRuntime.async(function saveMessages$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('messages', JSON.stringify(this.state.messages)));\n\n            case 3:\n              _context2.next = 8;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0.message);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[0, 5]], Promise);\n    }\n  }, {\n    key: \"deleteMessages\",\n    value: function deleteMessages() {\n      return _regeneratorRuntime.async(function deleteMessages$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('messages'));\n\n            case 3:\n              this.setState({\n                messages: []\n              });\n              _context3.next = 9;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0.message);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[0, 6]], Promise);\n    }\n  }, {\n    key: \"addMessage\",\n    value: function addMessage() {\n      var message = this.state.messages[0];\n      this.referenceChatMessages.add({\n        _id: message._id,\n        text: message.text.toString(),\n        createdAt: message.createdAt,\n        user: message.name\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var _this3 = this;\n\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      }, function () {\n        _this3.saveMessages();\n\n        _this3.addMessage();\n      });\n    }\n  }, {\n    key: \"renderInputToolbar\",\n    value: function renderInputToolbar(props) {\n      if (this.state.isConnected == false) {} else {\n        return React.createElement(InputToolbar, _extends({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 7\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var name = this.props.route.params.name;\n      this.props.navigation.setOptions({\n        title: name\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          color: 'grey'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, this.state.loggedInText), React.createElement(GiftedChat, {\n        isConnected: this.state.isConnected,\n        messages: this.state.messages,\n        onSend: function onSend(messages) {\n          return _this4.onSend(messages);\n        },\n        user: {\n          _id: this.state.uid\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }), Platform.OS === 'android' ? React.createElement(KeyboardAvoidingView, {\n        behavior: \"height\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }\n      }) : null);\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport { Chat as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  },\n  text: {\n    fontSize: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/jespe/Documents/Android-Chat/components/Chat.js"],"names":["React","AsyncStorage","NetInfo","PickerIOSItem","GiftedChat","Bubble","InputToolbar","firebase","require","Chat","onCollectionUpdate","querySnapshot","messages","forEach","doc","data","push","_id","text","toString","createdAt","toDate","user","name","setState","state","uid","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","referenceChatMessages","firestore","collection","fetch","then","connection","isConnected","console","log","authUnsubscribe","auth","onAuthStateChanged","signInAnonymously","unsubscribe","orderBy","onSnapshot","getMessages","getItem","JSON","parse","message","setItem","stringify","removeItem","add","previousState","append","saveMessages","addMessage","props","route","params","navigation","setOptions","title","styles","container","textAlign","color","loggedInText","onSend","Platform","OS","Component","StyleSheet","create","flex","justifyContent","backgroundColor","fontSize"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,OAAP,MAAoB,iCAApB;;;;;;;SAE2EC,a;AAC3E,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,YAA7B,QAAiD,0BAAjD;;AAIA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAA,OAAO,CAAC,oBAAD,CAAP;;IAEqBC,I;;;;;AACjB,kBAAc;AAAA;;AAAA;;AACZ;;AADY,UAyFlBC,kBAzFkB,GAyFG,UAACC,aAAD,EAAmB;AACtC,UAAMC,QAAQ,GAAG,EAAjB;AAEAD,MAAAA,aAAa,CAACE,OAAd,CAAsB,UAACC,GAAD,EAAS;AAE7B,YAAIC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAX;AACAH,QAAAA,QAAQ,CAACI,IAAT,CAAc;AACZC,UAAAA,GAAG,EAAEF,IAAI,CAACE,GADE;AAEZC,UAAAA,IAAI,EAAEH,IAAI,CAACG,IAAL,CAAUC,QAAV,EAFM;AAGZC,UAAAA,SAAS,EAAEL,IAAI,CAACK,SAAL,CAAeC,MAAf,EAHC;AAIZC,UAAAA,IAAI,EAAEP,IAAI,CAACQ,IAAL;AAJM,SAAd;AAMD,OATD;;AAUA,YAAKC,QAAL,CAAc;AACZZ,QAAAA,QAAQ,EAARA;AADY,OAAd;AAGD,KAzGiB;;AAGZ,UAAKa,KAAL,GAAa;AACXb,MAAAA,QAAQ,EAAE,EADC;AAEXc,MAAAA,GAAG,EAAE;AAFM,KAAb;;AAKN,QAAI,CAACnB,QAAQ,CAACoB,IAAT,CAAcC,MAAnB,EAA0B;AACxBrB,MAAAA,QAAQ,CAACsB,aAAT,CAAuB;AACvBC,QAAAA,MAAM,EAAE,yCADe;AAEvBC,QAAAA,UAAU,EAAE,+BAFW;AAGvBC,QAAAA,SAAS,EAAE,eAHY;AAIvBC,QAAAA,aAAa,EAAE,2BAJQ;AAKvBC,QAAAA,iBAAiB,EAAE,eALI;AAMvBC,QAAAA,KAAK,EAAE,4CANgB;AAOvBC,QAAAA,aAAa,EAAE;AAPQ,OAAvB;AASA,YAAKC,qBAAL,GAA6B9B,QAAQ,CAAC+B,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,CAA7B;AACC;;AAnBe;AAoBjB;;;;wCAGmB;AAAA;;AAElBrC,MAAAA,OAAO,CAACsC,KAAR,GAAgBC,IAAhB,CAAqB,UAAAC,UAAU,EAAI;AACjC,YAAIA,UAAU,CAACC,WAAf,EAA4B;AAC1BC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,SAFD,MAEO;AACLD,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AACF,OAND;AAQA,WAAKC,eAAL,GAAuBvC,QAAQ,CAACwC,IAAT,GACtBC,kBADsB,CACH,UAAC1B,IAAD,EAAU;AAC5B,YAAI,CAACA,IAAL,EAAW;AACTf,UAAAA,QAAQ,CAACwC,IAAT,GAAgBE,iBAAhB;AACD;;AAED,QAAA,MAAI,CAACzB,QAAL,CAAc;AACZE,UAAAA,GAAG,EAAEJ,IAAI,CAACI,GADE;AAEZd,UAAAA,QAAQ,EAAE,EAFE;AAGZW,UAAAA,IAAI,EAAE;AAHM,SAAd;;AAMA,QAAA,MAAI,CAAC2B,WAAL,GAAmB,MAAI,CAACb,qBAAL,CAClBc,OADkB,CACV,WADU,EACG,MADH,EAElBC,UAFkB,CAEP,MAAI,CAAC1C,kBAFE,CAAnB;AAGD,OAfsB,CAAvB;AAiBA,WAAK2C,WAAL;AACD;;;2CAEsB;AACrB,WAAKH,WAAL;AACA,WAAKJ,eAAL;AACD;;;;;;;;;AAGKlC,cAAAA,Q,GAAW,E;;;+CAEIX,YAAY,CAACqD,OAAb,CAAqB,UAArB,C;;;;;;;;;;4BAAqC,E;;;AAAtD1C,cAAAA,Q;AACA,mBAAKY,QAAL,CAAc;AACZZ,gBAAAA,QAAQ,EAAE2C,IAAI,CAACC,KAAL,CAAW5C,QAAX;AADE,eAAd;;;;;;;AAIAgC,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAMY,OAAlB;;;;;;;;;;;;;;;;;;+CAMMxD,YAAY,CAACyD,OAAb,CAAqB,UAArB,EAAiCH,IAAI,CAACI,SAAL,CAAe,KAAKlC,KAAL,CAAWb,QAA1B,CAAjC,C;;;;;;;;;AAENgC,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAMY,OAAlB;;;;;;;;;;;;;;;;;;+CAMMxD,YAAY,CAAC2D,UAAb,CAAwB,UAAxB,C;;;AACN,mBAAKpC,QAAL,CAAc;AACZZ,gBAAAA,QAAQ,EAAE;AADE,eAAd;;;;;;;AAIAgC,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAMY,OAAlB;;;;;;;;;;;iCAsBS;AAEX,UAAMA,OAAO,GAAG,KAAKhC,KAAL,CAAWb,QAAX,CAAoB,CAApB,CAAhB;AACA,WAAKyB,qBAAL,CAA2BwB,GAA3B,CAA+B;AAC3B5C,QAAAA,GAAG,EAAEwC,OAAO,CAACxC,GADc;AAE3BC,QAAAA,IAAI,EAAEuC,OAAO,CAACvC,IAAR,CAAaC,QAAb,EAFqB;AAG3BC,QAAAA,SAAS,EAAEqC,OAAO,CAACrC,SAHQ;AAI3BE,QAAAA,IAAI,EAAEmC,OAAO,CAAClC;AAJa,OAA/B;AAMD;;;6BAEqB;AAAA;;AAAA,UAAfX,QAAe,uEAAJ,EAAI;AACpB,WAAKY,QAAL,CAAc,UAAAsC,aAAa;AAAA,eAAK;AAC9BlD,UAAAA,QAAQ,EAAER,UAAU,CAAC2D,MAAX,CAAkBD,aAAa,CAAClD,QAAhC,EAA0CA,QAA1C;AADoB,SAAL;AAAA,OAA3B,EAGA,YAAM;AACJ,QAAA,MAAI,CAACoD,YAAL;;AACA,QAAA,MAAI,CAACC,UAAL;AACD,OAND;AAQD;;;uCAIkBC,K,EAAO;AACxB,UAAI,KAAKzC,KAAL,CAAWkB,WAAX,IAA0B,KAA9B,EAAqC,CACpC,CADD,MACO;AACL,eACE,oBAAC,YAAD,eACIuB,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAKD;AACF;;;6BAGU;AAAA;;AACP,UAAI3C,IAAI,GAAG,KAAK2C,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwB7C,IAAnC;AACA,WAAK2C,KAAL,CAAWG,UAAX,CAAsBC,UAAtB,CAAiC;AAAEC,QAAAA,KAAK,EAAEhD;AAAT,OAAjC;AAEC,aACC,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEiD,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,KAAK,EAAE;AAA9B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqD,KAAKlD,KAAL,CAAWmD,YAAhE,CADF,EAEI,oBAAC,UAAD;AACE,QAAA,WAAW,EAAE,KAAKnD,KAAL,CAAWkB,WAD1B;AAEE,QAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWb,QAFvB;AAGE,QAAA,MAAM,EAAE,gBAAAA,QAAQ;AAAA,iBAAI,MAAI,CAACiE,MAAL,CAAYjE,QAAZ,CAAJ;AAAA,SAHlB;AAIE,QAAA,IAAI,EAAE;AACJK,UAAAA,GAAG,EAAE,KAAKQ,KAAL,CAAWC;AADZ,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EASQoD,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GACF,oBAAC,oBAAD;AAAsB,QAAA,QAAQ,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,GAC2C,IAVnD,CADD;AAeF;;;;EAnK+B/E,KAAK,CAACgF,S;;SAAnBvE,I;AAuKrB,IAAM+D,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,eAAe,EAAE;AAHR,GADoB;AAM/BnE,EAAAA,IAAI,EAAE;AACJoE,IAAAA,QAAQ,EAAE;AADN;AANyB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport NetInfo from '@react-native-community/netinfo';\r\n\r\nimport { View, Text, StyleSheet, KeyboardAvoidingView, Platform, FlatList, PickerIOSItem } from 'react-native';\r\nimport { GiftedChat, Bubble, InputToolbar } from 'react-native-gifted-chat';\r\n// import firebase from 'firebase';\r\n// import firestore from 'firebase';\r\n\r\nconst firebase = require('firebase');\r\nrequire('firebase/firestore');\r\n\r\nexport default class Chat extends React.Component {\r\n    constructor() {\r\n      super();\r\n      \r\n      this.state = {\r\n        messages: [],\r\n        uid: 0,\r\n      }\r\n\r\nif (!firebase.apps.length){\r\n  firebase.initializeApp({\r\n  apiKey: \"AIzaSyDBiw9HcxkieYg04FpvoQryDAj7U2Ht5-E\",\r\n  authDomain: \"jw-chat-f1039.firebaseapp.com\",\r\n  projectId: \"jw-chat-f1039\",\r\n  storageBucket: \"jw-chat-f1039.appspot.com\",\r\n  messagingSenderId: \"1089230184479\",\r\n  appId: \"1:1089230184479:web:581fa3509e59c7cd0b752a\",\r\n  measurementId: \"G-TE01CF40LR\"\r\n  });\r\n  this.referenceChatMessages = firebase.firestore().collection(\"messages\");\r\n  }\r\n}\r\n\r\n\r\ncomponentDidMount() {\r\n\r\n  NetInfo.fetch().then(connection => {\r\n    if (connection.isConnected) {\r\n      console.log('online');\r\n    } else {\r\n      console.log('offline');\r\n    }\r\n  });\r\n\r\n  this.authUnsubscribe = firebase.auth()\r\n  .onAuthStateChanged((user) => {\r\n    if (!user) {\r\n      firebase.auth().signInAnonymously();\r\n    }\r\n\r\n    this.setState({\r\n      uid: user.uid,\r\n      messages: [],\r\n      name: '',\r\n    });\r\n\r\n    this.unsubscribe = this.referenceChatMessages\r\n    .orderBy('createdAt', 'desc')\r\n    .onSnapshot(this.onCollectionUpdate);\r\n  }); \r\n    \r\n  this.getMessages();\r\n}\r\n\r\ncomponentWillUnmount() {\r\n  this.unsubscribe();\r\n  this.authUnsubscribe();\r\n}\r\n// localstoreage\r\nasync getMessages() {\r\n  let messages = '';\r\n  try {\r\n    messages = await AsyncStorage.getItem('messages') ||  [];\r\n    this.setState({\r\n      messages: JSON.parse(messages)\r\n    });\r\n  } catch (error) {\r\n    console.log(error.message)\r\n  }\r\n};\r\n\r\nasync saveMessages() {\r\n  try{\r\n    await AsyncStorage.setItem('messages', JSON.stringify(this.state.messages));\r\n  } catch (error) {\r\n    console.log(error.message)\r\n  }\r\n}\r\n\r\nasync deleteMessages() {\r\n  try {\r\n    await AsyncStorage.removeItem('messages');\r\n    this.setState({\r\n      messages: []\r\n    })\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}\r\n\r\nonCollectionUpdate = (querySnapshot) => {\r\n  const messages = [];\r\n  // go through each document\r\n  querySnapshot.forEach((doc) => {\r\n    // get the QueryDocumentSnapshot's data\r\n    var data = doc.data();\r\n    messages.push({\r\n      _id: data._id,\r\n      text: data.text.toString(),\r\n      createdAt: data.createdAt.toDate(),\r\n      user: data.name(),\r\n    });\r\n  });\r\n  this.setState({\r\n    messages,\r\n  });\r\n};\r\n\r\naddMessage() { \r\n  // add a new list to the collection\r\n  const message = this.state.messages[0];\r\n  this.referenceChatMessages.add({\r\n      _id: message._id,\r\n      text: message.text.toString(),\r\n      createdAt: message.createdAt,\r\n      user: message.name,\r\n  });\r\n}\r\n\r\nonSend(messages = []) {\r\n  this.setState(previousState => ({\r\n    messages: GiftedChat.append(previousState.messages, messages),\r\n  }),\r\n  () => {\r\n    this.saveMessages();\r\n    this.addMessage();\r\n  }\r\n  )\r\n}\r\n\r\n\r\n\r\nrenderInputToolbar(props) {\r\n  if (this.state.isConnected == false) {\r\n  } else {\r\n    return(\r\n      <InputToolbar\r\n      {...props}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n/// add messages to collection and\r\n  render() {\r\n    let name = this.props.route.params.name;\r\n    this.props.navigation.setOptions({ title: name });\r\n\r\n     return (\r\n      <View style={styles.container}>\r\n        <Text style={{ textAlign: 'center', color: 'grey'}}>{this.state.loggedInText}</Text>\r\n          <GiftedChat \r\n            isConnected={this.state.isConnected}\r\n            messages={this.state.messages}\r\n            onSend={messages => this.onSend(messages)}            \r\n            user={{\r\n              _id: this.state.uid,\r\n            }} />\r\n            { Platform.OS === 'android' ? \r\n            <KeyboardAvoidingView behavior=\"height\" /> : null\r\n            }\r\n    </View>\r\n    );\r\n  };\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: 'white'      \r\n  },\r\n  text: {\r\n    fontSize: 30,\r\n  }\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}